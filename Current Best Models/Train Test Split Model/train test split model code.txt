library(ggplot2)
library(dplyr)
library(tidyverse)
library(fields)
library(maps)
library(sp)
library(mgcv) #need for GAM

#get filepath
cwd <- getwd()
load("datasets_project.RData")

#-----Using the Model with Training and Testing Data to Validate Predictions-----

# splitting the data into training and testing and then comparing 2014 risk vs actual data
train_df <- subset(TBdata, Year %in% c(2012, 2013))
test_df <- subset(TBdata, Year == 2014)

# fitting the model on training data (2012 and 2013)
model6 <- gam(TB ~ s(Timeliness, k=50, bs='cs') + s(Urbanisation, k=65, bs='cs') + 
                s(Poverty, k=65, bs='cs') + s(Density, k=65, bs='cs') +
                s(lat, lon, k=65, bs='tp') + s(Unemployment, k=65, bs='cs') +
                s(Poor_Sanitation, k=65, bs='cs') +
                offset(log(Population)), family=poisson(link='log'), data=train_df)

# summary, residual and check plots
summary(model6)
par(mfrow=c(2,2))
gam.check(model6) # residual plots and additional summary info
par(mfrow=c(3,3))
plot(model6)

# predicting risk and plotting against known data
risk_preds = predict(model6, newdata=test_df, type='response')  # think this returns rate and that TB in data is rate but need to confirm
test_df$TBrisk = risk_preds

par(mfrow=c(1,2))
plot.map(test_df$TBrisk[test_df$Year==2014],n.levels=7,main="Predicted TB Risk for 2014")
plot.map(TBdata$TB[TBdata$Year==2014],n.levels=7,main="TB Counts for 2014")

